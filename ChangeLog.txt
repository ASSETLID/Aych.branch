2011/04/22:
 * Added new module bytecomp/rectoloop.ml to implement transformation of recursive functions
   to loops in lambda code. Currently, the transformation is not yet done. Rectoloop.simplify
   is called by Simplif before doing let-simplification.
 * Added transformation of || and && into if-then-else to make recursive functions using them
   tailcall (see examples/00031_array_for_all)

2011/04/21:
 * Implemented total application of tuple functions receiving something else as argument (closure.ml)
 * Added mutable_flag to Const_block to allow approximation of blocks in closure.ml (lambda.ml)
 * Better approximation of constant blocks (closure.ml)
 * Better approximation of purity for primitives (closure.ml)
 * Removed the evaluation of arguments of inlined functions when they are useless and
    without effect (closure.ml)
 * See results in examples/00002

2011/03/01:
 * Implemented flattening of nested structures in Translmod.transl_store_structure

2010/11/29:
 * Implemented early emission of structured constants, so functions
 with such constants can still be inlined
 * Passed testsuite with same results as trunk

2010/11/29: created branch from trunk r10868


